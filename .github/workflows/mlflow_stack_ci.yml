## ----------  CI + deploy for the MLflow / Airflow / Feast / DVC stack ----------
#name: MLflow-stack CI
#
#on:                               # run on every push + PR to the mlflow path
#  push:
#    paths:
#      - "failure-prediction-in-manufacture-main/**"
#      - ".github/workflows/mlflow_stack_ci.yml"
#  pull_request:
#
#jobs:
#  ci:
#    runs-on: ubuntu-latest
#    timeout-minutes: 30
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up Python
#        uses: actions/setup-python@v5
#        with:
#          python-version: "3.10"
#          cache: pip                      # first-party cache :contentReference[oaicite:1]{index=1}
#
#      - name: Install core deps
#        run: |
#          pip install -r requirements.txt \
#                      dvc[s3] feast[aws] mlflow
#
#      - name: Pull sample data with DVC
#        run: dvc pull --targets data/sample --force --quiet   # seconds only
#
#      - name: Feast dry-run
#        run: |
#          cd failure-prediction-in-manufacture-main/multiclass-classification-model/src/feast_demo/feature_repo
#          feast plan --interactive=false
#
#      - name: Static analysis & unit tests
#        run: |
#          flake8 src/
#          pytest -q
#
#      - name: Upload CI logs
#        uses: actions/upload-artifact@v4
#        with:
#          name: ci-logs
#          path: .pytest_cache
#
#  deploy:
#    needs: ci
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Copy DAG to Airflow host
#        uses: appleboy/scp-action@v0.1.6
#        with:
#          host:    ${{ secrets.AIRFLOW_HOST }}
#          username: ${{ secrets.AIRFLOW_USER }}
#          key:     ${{ secrets.SSH_KEY }}
#          source:  dags/ideko_mlflow_optuna_pipeline.py
#          target:  /opt/airflow/dags/
#
#      - name: Smoke-trigger the DAG
#        run: |
#          curl -u "${{ secrets.AIRFLOW_USER }}:${{ secrets.AIRFLOW_PASS }}" \
#               -H "Content-Type: application/json" \
#               -X POST \
#               "$AIRFLOW_URL/api/v1/dags/ideko_mlflow_optuna_pipeline/dagRuns" \
#               -d '{}'
